<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.thishouse.mapper.ContractMapper">

    <insert id="contract_request" parameterType="com.example.thishouse.domain.contract.Contract">
        insert into contract (lessoer_idx,tenant_idx,house_num,contract_state,lease_term_begin,lease_term_end,contract_date,day_of_delivery,special_provisions,deposit,down_payment,balance,balance_deadline,deal_type,house_type,road_address,detail_address,exclusive_area2,supply_area2,middle_payment_deadline,middle_payment)
        values(#{lessoer_idx},#{tenant_idx},#{house_num},"계약서 작성 완료",#{lease_term_begin},#{lease_term_begin},now(),#{day_of_delivery},#{special_provisions},#{deposit},#{down_payment},#{balance},#{balance_deadline},#{deal_type},#{house_type},#{road_address},#{detail_address},#{exclusive_area2},#{supply_area2},#{middle_payment_deadline},#{middle_payment})
    </insert>

    <insert id="tenant_info" parameterType="com.example.thishouse.domain.contract.Tenant">
        insert into tenant(house_num,user_id,tenant_name,tenant_resident_number_f,tenant_resident_number_b,tenant_phone,road_address,detail_address)
        values(#{house_num},#{user_id},#{tenant_name},#{tenant_resident_number_f},#{tenant_resident_number_b},#{tenant_phone},#{road_address},#{detail_address})
    </insert>

    <insert id="lessoer_info" parameterType="com.example.thishouse.domain.contract.Lessoer">
        insert into lessoer(house_num,user_id,lessoer_name,lessoer_resident_number_f,lessoer_resident_number_b,lessoer_phone,l_road_address,l_detail_address)
        values(#{house_num},#{user_id},#{lessoer_name},#{lessoer_resident_number_f},#{lessoer_resident_number_b},#{lessoer_phone},#{l_road_address},#{l_detail_address})
    </insert>

    <select id="get_lessoer" resultType="integer">
        select lessoer_idx
        from lessoer
        where house_num = #{houseNum}
    </select>

    <select id="get_tenant" resultType="integer">
        select tenant_idx
        from tenant
        where user_id = #{user_id} and house_num = #{house_num}
    </select>

    <select id="getConReqList" resultType="java.util.HashMap">
        select * from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b
        where a.house_num = b.house_num and a.contract_state in ("계약서 작성 완료","계약 요청") and a.tenant_idx = any(select c.tenant_idx from tenant c where user_id = #{id})
    </select>

    <select id="get_tenant_id" resultType="String">
        select tenant_idx
        from tenant
        where user_id = #{userId}
    </select>

    <select id="get_lessoer_id" resultType="String">
        select lessoer_idx
        from lessoer
        where user_id = #{userId}
    </select>

    <select id="get_contract_request" resultType="int">
        select count(*) from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b
        where a.house_num = b.house_num and a.contract_state in ("계약서 작성 완료","계약 요청") and a.tenant_idx = any(select c.tenant_idx from tenant c where user_id = #{id})
    </select>

    <select id="get_contract_accept" resultType="int">
        select count(*) from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b
        where a.house_num = b.house_num and a.contract_state = '계약 요청' and a.lessoer_idx = any(select c.lessoer_idx from lessoer c where user_id = #{user_id})
    </select>

    <select id="get_contract_id" resultType="int">
        select contract_idx
        from contract
        where lessoer_idx = #{lessoer_idx} and tenant_idx = #{tenant_idx} and house_num = #{house_num}
    </select>

    <select id="get_house_num" resultType="String">
        select house_num
        from contract
        where contract_idx = #{contract_idx}
    </select>

    <select id="getConResList" resultType="java.util.HashMap">
        select * from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b, tenant d
        where a.house_num = b.house_num and a.contract_state = '계약 요청' and a.lessoer_idx = any(select c.lessoer_idx from lessoer c where c.user_id = #{id})
          and a.tenant_idx = d.tenant_idx
    </select>

    <select id="exist_contract" resultType="int">
      select count(*)
      from contract a ,tenant b
      where a.tenant_idx = b.tenant_idx and a.house_num= #{house_num} and b.user_id = #{user_id}
    </select>

    <update id="state_update_request">
        update contract
        set contract_state = "계약 요청"
        where contract_idx = #{contract_idx}
    </update>

    <select id="getCompleteList" resultType="java.util.HashMap">
        select * from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b, tenant d
        where a.house_num = b.house_num and a.contract_state like '완료%' and a.lessoer_idx = any(select c.lessoer_idx from lessoer c where c.user_id = #{id})
          and a.tenant_idx = d.tenant_idx
    </select>

    <select id="contract_complete_cnt" resultType="int">
        select count(*) from contract a, lessoer d
        where a.lessoer_idx = d.lessoer_idx and a.contract_state like '완료%' and
                a.lessoer_idx = any(select c.lessoer_idx from lessoer c where c.user_id = #{id})
    </select>

    <select id="contract_complete_cnt_tenant" resultType="int">
        select count(*) from contract a, tenant d
        where a.tenant_idx = d.tenant_idx and a.contract_state like '완료%' and
                a.tenant_idx = any(select c.tenant_idx from tenant c where c.user_id = #{id})
    </select>

    <select id="get_complete_tenant" resultType="java.util.HashMap">
        select * from contract a,  (select *
                                    from house_picture
                                    where house_picture_num in (select max(house_picture_num) from house_picture group by house_num)) b, lessoer d
        where a.house_num = b.house_num and a.contract_state like '완료%' and a.tenant_idx = any(select c.tenant_idx from tenant c where c.user_id = #{id})
          and a.lessoer_idx = d.lessoer_idx
    </select>

    <update id="contract_complete">
        update contract
        set contract_state = "완료 성공", contract_date = now()
        where contract_idx = #{contract_idx}
    </update>

    <select id="getLessoerIdByContractIdx" resultType="String">
        select lessoer_idx
        from contract
        where contract_idx = #{contract_idx}
    </select>

    <select id="getTenantIdByContractIdx" resultType="String">
        select tenant_idx
        from contract
        where contract_idx = #{contract_idx}
    </select>

    <delete id="delete_contarct">
        delete from contract
        where contract_idx = #{contract_idx}
    </delete>

    <delete id="delete_lessoer">
        delete from contract
        where contract_idx = #{lessoerIdx}
    </delete>

    <delete id="delete_tenant">
        delete from contract
        where contract_idx = #{tenantIdx}
    </delete>

    <update id="contract_reject">
        update contract
        set contract_state = "완료 실패"
        where contract_idx = #{contract_idx}
    </update>

    <update id="reject_same_house_contract">
        update contract
        set contract_state = "완료 실패"
        where house_num = #{houseNum}
    </update>

    <select id="getContractDetail" resultType="Contract">
        select *
        from contract
        where contract_idx = #{contractIdx}
    </select>

    <select id="getLessoerInfo" resultType="Lessoer">
        select *
        from lessoer
        where lessoer_idx = #{lessoer_idx}
    </select>

    <select id="getTenantInfo" resultType="Tenant">
        select *
        from tenant
        where tenant_idx = #{tenant_idx}
    </select>

    <select id="contract_list" resultType="HashMap">
        select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
        from contract a ,lessoer b, tenant c
        where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx
        limit #{cs.skip} , #{cs.amount}
    </select>

    <select id="contract_list_cnt" resultType="int">
        select count(*)
        from contract
    </select>

    <select id="contract_list_user_id" resultType="HashMap">
            select * from(
                                select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
                                from contract a ,lessoer b, tenant c
                                where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and b.user_id = #{cs.keyword}
                                union
                                select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
                                from contract a ,lessoer b, tenant c
                                where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and c.user_id= #{cs.keyword}
                                )  AS subquery
            limit #{cs.skip} , #{cs.amount}
    </select>

    <select id="contract_list_user_id_cnt" resultType="int">
        SELECT count(*) FROM (
                                 select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
                                 from contract a ,lessoer b, tenant c
                                 where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and b.user_id = #{cs.keyword}
                                 union
                                 select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
                                 from contract a ,lessoer b, tenant c
                                 where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and c.user_id= #{cs.keyword}
                             ) AS subquery;
    </select>

    <select id="contract_list_location" resultType="HashMap">
        select a.contract_idx, b.user_id as lessoer_id, c.user_id as tenant_id, a.road_address, a.detail_address,a.contract_date,a.contract_state
        from contract a ,lessoer b, tenant c
        where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and a.road_address like CONCAT('%',#{cs.keyword},'%')
        limit #{cs.skip} , #{cs.amount}

    </select>

    <select id="contract_list_location_cnt" resultType="int">
        select count(*)
        from contract a ,lessoer b, tenant c
        where a.lessoer_idx = b.lessoer_idx and a.tenant_idx = c.tenant_idx and a.road_address like CONCAT('%',#{cs.keyword},'%')
    </select>
</mapper>